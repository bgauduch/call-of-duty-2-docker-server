name: Reusable Build Workflow

on:
  workflow_call:
    inputs:
      build_variant:
        description: 'Build variant to compile (single or all)'
        required: true
        type: string
      enable_trivy:
        description: 'Enable Trivy security scanning'
        required: false
        type: boolean
        default: true
    outputs:
      image_digest:
        description: 'Docker image digest (sha256)'
        value: ${{ jobs.build.outputs.digest }}

permissions:
  contents: read
  security-events: write

env:
  IMAGE_NAME: bgauduch/cod2server

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ${{ fromJSON(inputs.build_variant == 'single' && '{"include":[{"cod2_version":"1_3","cod2_lnxded_type":"_nodelay_va_loc"}]}' || '{"include":[{"cod2_version":"1_0","cod2_lnxded_type":"a"},{"cod2_version":"1_0","cod2_lnxded_type":"a_va"},{"cod2_version":"1_0","cod2_lnxded_type":"a_va_loc"},{"cod2_version":"1_2","cod2_lnxded_type":"c"},{"cod2_version":"1_2","cod2_lnxded_type":"c_nodelay"},{"cod2_version":"1_2","cod2_lnxded_type":"c_nodelay_va_loc"},{"cod2_version":"1_2","cod2_lnxded_type":"c_patch_va_loc"},{"cod2_version":"1_3","cod2_lnxded_type":""},{"cod2_version":"1_3","cod2_lnxded_type":"_cracked"},{"cod2_version":"1_3","cod2_lnxded_type":"_nodelay"},{"cod2_version":"1_3","cod2_lnxded_type":"_patch_va_loc"},{"cod2_version":"1_3","cod2_lnxded_type":"_nodelay_va_loc"}]}') }}

    env:
      COD2_VERSION: ${{ matrix.cod2_version }}
      COD2_LNXDED_TYPE: ${{ matrix.cod2_lnxded_type }}
      IMAGE_TAG: ${{ matrix.cod2_version }}${{ matrix.cod2_lnxded_type }}
      DOCKER_BUILDKIT: 1

    outputs:
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b167a89702b8e0a578f6c89e8c4e8d9804756f0c # v3.8.0

      - name: Build image
        id: build
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            COD2_VERSION=${{ env.COD2_VERSION }}
            COD2_LNXDED_TYPE=${{ env.COD2_LNXDED_TYPE }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        if: inputs.enable_trivy
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # v0.33.1
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: 'sarif'
          output: 'trivy-results-${{ env.IMAGE_TAG }}.sarif'

      - name: Upload Trivy results to GitHub Security tab
        if: inputs.enable_trivy && always()
        uses: github/codeql-action/upload-sarif@42213152a85ae7569bdb6bec7bcd74cd691bfe41 # v3.28.0
        with:
          sarif_file: 'trivy-results-${{ env.IMAGE_TAG }}.sarif'
          category: 'trivy-${{ env.IMAGE_TAG }}'

      - name: Save image artifact
        run: docker image save -o image-${{ env.IMAGE_TAG }}.tar ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Upload image artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.5.0
        with:
          name: image-${{ env.IMAGE_TAG }}
          path: image-${{ env.IMAGE_TAG }}.tar
          retention-days: 7
