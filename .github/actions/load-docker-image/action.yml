name: 'Load Docker Image from Artifact'
description: 'Downloads and loads a Docker image artifact from a workflow run'

inputs:
  image_tag:
    description: 'Docker image tag to load (e.g., 1_3_nodelay_va_loc)'
    required: true
  image_name:
    description: 'Docker image name (e.g., bgauduch/cod2server)'
    required: true
  github_token:
    description: 'GitHub token for downloading artifacts'
    required: false
    default: ${{ github.token }}
  run_id:
    description: 'Workflow run ID to download artifact from (defaults to current run)'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Download image artifact
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: image-${{ inputs.image_tag }}
        github-token: ${{ inputs.github_token }}
        run-id: ${{ inputs.run_id }}

    - name: Load Docker image
      shell: bash
      run: |
        IMAGE_FILE="image-${{ inputs.image_tag }}.tar.gz"
        if [ -f "$IMAGE_FILE" ]; then
          echo "Loading compressed image..."
          gunzip -c "$IMAGE_FILE" | docker image load
        elif [ -f "image-${{ inputs.image_tag }}.tar" ]; then
          echo "Loading uncompressed image..."
          docker image load --input "image-${{ inputs.image_tag }}.tar"
        else
          echo "Error: No image file found"
          ls -la
          exit 1
        fi

    - name: Verify image loaded successfully
      shell: bash
      env:
        IMAGE_NAME: ${{ inputs.image_name }}
        IMAGE_TAG: ${{ inputs.image_tag }}
      run: |
        docker images ${IMAGE_NAME}:${IMAGE_TAG}
        if [ -z "$(docker images -q ${IMAGE_NAME}:${IMAGE_TAG})" ]; then
          echo "Error: Image ${IMAGE_NAME}:${IMAGE_TAG} not found after loading"
          exit 1
        fi
        echo "âœ“ Successfully loaded ${IMAGE_NAME}:${IMAGE_TAG}"
